<!-- If you wish to turn off checking for a section of code, you can put a comment in the source
before and after the section, with the following syntax: -->
<!-- // scalastyle:off {idWarning}-->
<!-- ... -->
<!-- // naughty stuff -->
<!-- ... -->
<!-- // scalastyle:on {idWarning}-->
<scalastyle commentFilter="enabled">
  <name>Scalastyle Suramericana configuration</name>
  <check class="org.scalastyle.file.FileTabChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.file.FileLengthChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maxFileLength"><![CDATA[800]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.file.HeaderMatchesChecker" enabled="false" level="warning">
    <parameters>
      <parameter name="header"><![CDATA[// Copyright (C) 2011-2012 the original author or authors.
    // See the LICENCE.txt file distributed with this work for additional
    // information regarding copyright ownership.
    //
    // Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.file.FileLineLengthChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maxLineLength"><![CDATA[160]]></parameter>
      <parameter name="tabSize"><![CDATA[4]]></parameter>
      <parameter name="ignoreImports"><![CDATA[true]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maxParameters"><![CDATA[8]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false" level="warning">
    <parameters>
      <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.ReturnChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.NullChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.NoCloneChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.file.RegexChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[println]]></parameter>
    </parameters>
    <customMessage>No se debe incluir println, por favor use logger.[debug, info, etc.]</customMessage>
  </check>
  <check class="org.scalastyle.file.RegexChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[Created by]]></parameter>
    </parameters>
    <customMessage>No se debe incluir comentarios de autor, la historia queda en git</customMessage>
  </check>
  <check class="org.scalastyle.scalariform.TokenChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex">^[ai]sInstanceOf$</parameter>
    </parameters>
    <customMessage>Avoid casting (asInstanceOf or isInstanceOf).</customMessage>
  </check>
  <check class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maxTypes"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maximum"><![CDATA[10]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.IfBraceChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
      <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maxLength"><![CDATA[50]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[^[^A-Z].*$]]></parameter>
      <customMessage>Method name should not start with an upper case letter.</customMessage>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]|\**$]]></parameter>
      <parameter name="ignoreRegex"><![CDATA[^$]]></parameter>
      <parameter name="ignoreOverride"><![CDATA[false]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="maxMethods"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="ignoreOverride"><![CDATA[false]]></parameter>
    </parameters>
    <customMessage>Public method must have explicit type</customMessage>
  </check>
  <check class="org.scalastyle.file.NewLineAtEofChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.WhileChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.VarFieldChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.VarLocalChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="false" level="warning">
    <!-- Activar cuando corrijan esto: https://github.com/scalastyle/scalastyle/issues/100 -->
    <parameters>
      <parameter name="allowed"><![CDATA[2]]></parameter>
      <parameter name="ignoreRegex"><![CDATA[^&quot;&quot;$]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.BlockImportChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.ForBraceChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="true" level="warning"/>
  <check class="org.scalastyle.scalariform.ScalaDocChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.scalariform.NonASCIICharacterChecker" enabled="false" level="warning"/>
  <check class="org.scalastyle.file.IndentationChecker" enabled="false" level="warning">
    <parameters>
      <parameter name="tabSize"><![CDATA[2]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.FieldNamesChecker" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
    </parameters>
  </check>
  <check class="org.scalastyle.scalariform.TokenChecker" customId="mutablecollections" enabled="true" level="warning">
    <parameters>
      <parameter name="regex"><![CDATA[^(ArrayList|ArrayBuffer|mutable)$]]></parameter>
      <customMessage>Avoid using mutable collections.</customMessage>
    </parameters>
  </check>
</scalastyle>